// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
    "name": "DeepLVioDeSurVideos",
    "build": {
        "dockerfile": "../docker/Dockerfile",
        "context": "..",
        "args": {
            "USERNAME": "${localEnv:USERNAME}",
            "USER_UID": "1001",
            "USER_GID": "1001"
        }
    },
    "runArgs": [
        "--gpus",
        "all",
        "--env-file",
        "./.devcontainer/env_file.env"
    ],
    "mounts": [
        "source=${localEnv:HOME}/Documentos/Violence Detection Datasets,target=/workspaces/DeepLVioDeSurVideos/src/assets/Violence Detection Datasets,type=bind,consistency=cached"
    ],
    // Configure tool-specific properties.
    "customizations": {
        // Configure properties specific to VS Code.
        "vscode": {
            // Set *default* container specific settings.json values on container create.
            "settings": {
                // Global.
                "files.autoSave": "afterDelay",
                // Text editor.
                "editor.defaultFormatter": "ms-python.black-formatter",
                "editor.formatOnSave": true,
                // Python anvronment:
                "python.defaultInterpreterPath": "/usr/local/python/current/bin/python3",
                // Testing.
                "python.testing.pytestEnabled": false,
                "python.testing.unittestEnabled": true,
                "python.testing.unittestArgs": [
                    "-v",
                    "-s",
                    ".",
                    "-p",
                    "*test*.py"
                ],
                // Formatter.
                "black-formatter.interpreter": [
                    "/usr/local/python/current/bin/python3"
                ],
                "black-formatter.path": [
                    "/usr/local/py-utils/bin/black"
                ],
                // Linting, Security and Docstring.
                "flake8.interpreter": [
                    "/usr/local/python/current/bin/python3"
                ],
                "flake8.path": [
                    "/usr/local/py-utils/bin/pydocstyle",
                    "/usr/local/py-utils/bin/bandit"
                ],
                // Type checker.
                "mypy-type-checker.interpreter": [
                    "/usr/local/python/current/bin/python3"
                ],
                "mypy-type-checker.path": [
                    "/usr/local/py-utils/bin/mypy"
                ],
                // Error and Style linter.
                "pylint.path": [
                    "/usr/local/py-utils/bin/pylint"
                ],
                "pylint.interpreter": [
                    "/usr/local/python/current/bin/python3"
                ],
                // Jupyter Notebook
                "notebook.output.textLineLimit": 100
            },
            // Add the IDs of extensions you want installed when the container is created.
            "extensions": [
                "ms-python.flake8",
                "ms-python.python",
                "ms-python.pylint",
                "redhat.vscode-yaml",
                "ms-toolsai.jupyter",
                "grapecity.gc-excelviewer",
                "msrvida.vscode-sanddance",
                "ms-python.black-formatter",
                "ms-azuretools.vscode-docker",
                "ms-python.mypy-type-checker",
                "davidanson.vscode-markdownlint"
            ]
        }
    },
    // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
    "remoteUser": "${localEnv:USERNAME}",
    "containerUser": "${localEnv:USERNAME}",
    // Features to add to the dev container. More info: https://containers.dev/features.
    "features": {
        "ghcr.io/devcontainers/features/python:1": {
            "version": "latest"
        },
        "ghcr.io/devcontainers/features/git:1": {
            "version": "latest"
        }
    },
    // Use 'postCreateCommand' to run commands after the container is created.
    "postCreateCommand": {
        "python": "pip install --user -r requirements.txt",
        "opencv": "sudo apt update -y && sudo apt install -y python3-opencv"
    }
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],
}